import React, { useRef, useEffect } from "react";
import Svg, { Path, G, Rect, Polygon, Line } from "react-native-svg";
import { Animated, Easing } from "react-native";

const AnimatedLine = Animated.createAnimatedComponent(Line);
const AnimatedRect = Animated.createAnimatedComponent(Rect);

function AnimatedTyping(props) {
  const type = useRef(new Animated.Value(1)).current;

  const animateType = () => {
    Animated.timing(type, {
      toValue: props.length,
      duration: 1000,
      easing: Easing.out(Easing.ease),
      useNativeDriver: false,
    }).start();
  };

  useEffect(() => {
    animateType();
  }, [props.length]);

  return (
    <AnimatedRect
      x="22"
      y="66"
      width="10"
      height="13"
      fill="#D9D9D9"
      scaleX={type}
    />
  );
}

function Test(props) {
  const fold = useRef(new Animated.Value(0)).current;
  const type = useRef(new Animated.Value(0)).current;

  const animateFold = () => {
    Animated.timing(fold, {
      toValue: 105,
      duration: 1000,
      easing: Easing.out(Easing.ease),
      useNativeDriver: false,
    }).start();
  };

  useEffect(() => {
    animateFold();
  }, [fold]);

  return (
    <Svg
      width={210}
      height={297}
      viewBox="-5 -5 220 317"
      fill="none"
      onPress={() => {
        fold.setValue(0);
        animateFold();
      }}
      {...props}
    >
      {/* <G stroke="#404040" strokeWidth={2}>
        <AnimatedLine x1="0" y1="105" x2={fold} y2={fold} />
        <AnimatedLine x1="105" y1="0" x2={fold} y2={fold} />
        <AnimatedLine
          x1="210"
          y1="105"
          x2={fold.interpolate({
            inputRange: [0, 105],
            outputRange: [210, 105],
          })}
          y2={fold}
        />
        <AnimatedLine
          x1="105"
          y1="0"
          x2={fold.interpolate({
            inputRange: [0, 105],
            outputRange: [210, 105],
          })}
          y2={fold}
        />
        <AnimatedLine
          x1="0"
          y1="105"
          x2="105"
          y2="0"
          strokeOpacity={fold.interpolate({
            inputRange: [0, 52, 53, 105],
            outputRange: [0, 0, 1, 1],
          })}
        />
        <AnimatedLine
          x1="210"
          y1="105"
          x2="105"
          y2="0"
          strokeOpacity={fold.interpolate({
            inputRange: [0, 52, 53, 105],
            outputRange: [0, 0, 1, 1],
          })}
        />
      </G> */}
      <Rect
        x="1"
        y="1"
        width="208"
        height="295"
        rx="7"
        stroke="#404040"
        strokeWidth="2"
        strokeLinejoin="round"
      />
      <Path
        d="M75.73 34.3c-1.053 0-2.003-.183-2.85-.55a5.384 5.384 0 0 1-2.08-1.57c-.54-.687-.883-1.5-1.03-2.44l2.5-.38c.213.853.65 1.513 1.31 1.98.667.467 1.433.7 2.3.7.513 0 .997-.08 1.45-.24.453-.16.82-.393 1.1-.7.287-.307.43-.683.43-1.13 0-.2-.033-.383-.1-.55a1.31 1.31 0 0 0-.3-.46 1.858 1.858 0 0 0-.5-.36c-.2-.113-.433-.21-.7-.29l-3.72-1.1c-.32-.093-.667-.217-1.04-.37a4.482 4.482 0 0 1-1.05-.65 3.342 3.342 0 0 1-.81-1.06c-.207-.433-.31-.967-.31-1.6 0-.927.233-1.703.7-2.33.473-.633 1.107-1.107 1.9-1.42.8-.313 1.687-.467 2.66-.46.987.007 1.867.177 2.64.51.773.327 1.42.803 1.94 1.43.52.627.887 1.383 1.1 2.27l-2.59.45a2.812 2.812 0 0 0-.62-1.29c-.3-.36-.67-.633-1.11-.82a3.734 3.734 0 0 0-2.73-.08c-.407.147-.737.36-.99.64-.247.28-.37.607-.37.98 0 .353.107.643.32.87.213.22.477.397.79.53.32.127.643.233.97.32l2.58.72c.353.093.75.22 1.19.38.44.16.863.383 1.27.67.407.287.74.663 1 1.13.267.467.4 1.06.4 1.78 0 .747-.157 1.403-.47 1.97a4.125 4.125 0 0 1-1.25 1.4 5.718 5.718 0 0 1-1.81.84c-.673.187-1.38.28-2.12.28Zm8.014-.3V19.6h2.41V34h-2.41Zm11.346.3a7.04 7.04 0 0 1-2.63-.49 6.282 6.282 0 0 1-2.15-1.46c-.613-.64-1.093-1.423-1.44-2.35-.347-.933-.52-2-.52-3.2 0-1.573.293-2.917.88-4.03.587-1.12 1.39-1.977 2.41-2.57 1.02-.6 2.17-.9 3.45-.9 1.773 0 3.177.413 4.21 1.24 1.04.82 1.743 1.973 2.11 3.46l-2.46.39c-.273-.853-.72-1.533-1.34-2.04-.62-.513-1.41-.77-2.37-.77-.967-.013-1.77.197-2.41.63-.64.433-1.123 1.043-1.45 1.83-.32.787-.48 1.707-.48 2.76 0 1.053.16 1.97.48 2.75.32.773.8 1.377 1.44 1.81.647.433 1.453.657 2.42.67.727.007 1.363-.123 1.91-.39a3.338 3.338 0 0 0 1.34-1.23c.347-.553.58-1.243.7-2.07h-2.54v-1.89h5.1c.013.107.023.263.03.47.007.207.01.33.01.37 0 1.36-.27 2.57-.81 3.63a5.983 5.983 0 0 1-2.3 2.48c-1 .6-2.197.9-3.59.9Zm8.708-.3V19.6h2.44l6.68 10.15V19.6h2.44V34h-2.44l-6.68-10.15V34h-2.44Zm24.16.3c-1.147 0-2.157-.233-3.03-.7a5.128 5.128 0 0 1-2.04-1.97c-.487-.847-.73-1.84-.73-2.98v-9.03l2.44-.02v8.99c0 .54.09 1.023.27 1.45.186.427.436.79.75 1.09.313.293.673.517 1.08.67.406.153.826.23 1.26.23.446 0 .87-.077 1.27-.23.406-.16.766-.387 1.08-.68.313-.3.56-.663.74-1.09.18-.427.27-.907.27-1.44V19.6h2.44v9.05c0 1.14-.247 2.133-.74 2.98a5.052 5.052 0 0 1-2.04 1.97c-.867.467-1.874.7-3.02.7Zm8.594-.3V19.6h5.95c.14 0 .32.007.54.02.22.007.424.027.61.06.834.127 1.52.403 2.06.83.547.427.95.967 1.21 1.62.267.647.4 1.367.4 2.16 0 .787-.133 1.507-.4 2.16a3.879 3.879 0 0 1-1.22 1.61c-.54.427-1.223.703-2.05.83a7.468 7.468 0 0 1-.62.06c-.22.013-.396.02-.53.02h-3.54V34h-2.41Zm2.41-7.28h3.44c.134 0 .284-.007.45-.02.167-.013.32-.04.46-.08.4-.1.714-.277.94-.53.234-.253.397-.54.49-.86.1-.32.15-.633.15-.94 0-.307-.05-.62-.15-.94a2.122 2.122 0 0 0-.49-.87c-.226-.253-.54-.43-.94-.53a1.956 1.956 0 0 0-.46-.07 5.685 5.685 0 0 0-.45-.02h-3.44v4.86Z"
        fill="#000"
      />
      <AnimatedTyping length={props.textWidth} />
      <Rect x="22" y="94" width="110" height="13" fill="#D9D9D9" />
    </Svg>
  );
}

export default Test;

//  <svg width="218" height="305" viewBox="0 0 218 305" fill="none" xmlns="http://www.w3.org/2000/svg">
// <g filter="url(#filter0_d_3555_13279)">
// <rect x="4" width="210" height="297" rx="8" fill="white"/>
// <rect x="5" y="1" width="208" height="295" rx="7" stroke="#404040" stroke-width="2" stroke-linejoin="round"/>
// </g>
// <path d="M75.73 34.3C74.6767 34.3 73.7267 34.1167 72.88 33.75C72.04 33.3833 71.3467 32.86 70.8 32.18C70.26 31.4933 69.9167 30.68 69.77 29.74L72.27 29.36C72.4833 30.2133 72.92 30.8733 73.58 31.34C74.2467 31.8067 75.0133 32.04 75.88 32.04C76.3933 32.04 76.8767 31.96 77.33 31.8C77.7833 31.64 78.15 31.4067 78.43 31.1C78.7167 30.7933 78.86 30.4167 78.86 29.97C78.86 29.77 78.8267 29.5867 78.76 29.42C78.6933 29.2467 78.5933 29.0933 78.46 28.96C78.3333 28.8267 78.1667 28.7067 77.96 28.6C77.76 28.4867 77.5267 28.39 77.26 28.31L73.54 27.21C73.22 27.1167 72.8733 26.9933 72.5 26.84C72.1333 26.68 71.7833 26.4633 71.45 26.19C71.1233 25.91 70.8533 25.5567 70.64 25.13C70.4333 24.6967 70.33 24.1633 70.33 23.53C70.33 22.6033 70.5633 21.8267 71.03 21.2C71.5033 20.5667 72.1367 20.0933 72.93 19.78C73.73 19.4667 74.6167 19.3133 75.59 19.32C76.5767 19.3267 77.4567 19.4967 78.23 19.83C79.0033 20.1567 79.65 20.6333 80.17 21.26C80.69 21.8867 81.0567 22.6433 81.27 23.53L78.68 23.98C78.5733 23.4733 78.3667 23.0433 78.06 22.69C77.76 22.33 77.39 22.0567 76.95 21.87C76.5167 21.6833 76.0533 21.5833 75.56 21.57C75.08 21.5633 74.6333 21.6367 74.22 21.79C73.8133 21.9367 73.4833 22.15 73.23 22.43C72.9833 22.71 72.86 23.0367 72.86 23.41C72.86 23.7633 72.9667 24.0533 73.18 24.28C73.3933 24.5 73.6567 24.6767 73.97 24.81C74.29 24.9367 74.6133 25.0433 74.94 25.13L77.52 25.85C77.8733 25.9433 78.27 26.07 78.71 26.23C79.15 26.39 79.5733 26.6133 79.98 26.9C80.3867 27.1867 80.72 27.5633 80.98 28.03C81.2467 28.4967 81.38 29.09 81.38 29.81C81.38 30.5567 81.2233 31.2133 80.91 31.78C80.6033 32.34 80.1867 32.8067 79.66 33.18C79.1333 33.5533 78.53 33.8333 77.85 34.02C77.1767 34.2067 76.47 34.3 75.73 34.3ZM83.7445 34V19.6H86.1545V34H83.7445ZM95.09 34.3C94.1567 34.3 93.28 34.1367 92.46 33.81C91.6467 33.4767 90.93 32.99 90.31 32.35C89.6967 31.71 89.2167 30.9267 88.87 30C88.5233 29.0667 88.35 28 88.35 26.8C88.35 25.2267 88.6433 23.8833 89.23 22.77C89.8167 21.65 90.62 20.7933 91.64 20.2C92.66 19.6 93.81 19.3 95.09 19.3C96.8633 19.3 98.2667 19.7133 99.3 20.54C100.34 21.36 101.043 22.5133 101.41 24L98.95 24.39C98.6767 23.5367 98.23 22.8567 97.61 22.35C96.99 21.8367 96.2 21.58 95.24 21.58C94.2733 21.5667 93.47 21.7767 92.83 22.21C92.19 22.6433 91.7067 23.2533 91.38 24.04C91.06 24.8267 90.9 25.7467 90.9 26.8C90.9 27.8533 91.06 28.77 91.38 29.55C91.7 30.3233 92.18 30.9267 92.82 31.36C93.4667 31.7933 94.2733 32.0167 95.24 32.03C95.9667 32.0367 96.6033 31.9067 97.15 31.64C97.6967 31.3667 98.1433 30.9567 98.49 30.41C98.8367 29.8567 99.07 29.1667 99.19 28.34H96.65V26.45H101.75C101.763 26.5567 101.773 26.7133 101.78 26.92C101.787 27.1267 101.79 27.25 101.79 27.29C101.79 28.65 101.52 29.86 100.98 30.92C100.447 31.9733 99.68 32.8 98.68 33.4C97.68 34 96.4833 34.3 95.09 34.3ZM103.798 34V19.6H106.238L112.918 29.75V19.6H115.358V34H112.918L106.238 23.85V34H103.798ZM127.958 34.3C126.811 34.3 125.801 34.0667 124.928 33.6C124.061 33.1333 123.381 32.4767 122.888 31.63C122.401 30.7833 122.158 29.79 122.158 28.65V19.62L124.598 19.6V28.59C124.598 29.13 124.688 29.6133 124.868 30.04C125.054 30.4667 125.304 30.83 125.618 31.13C125.931 31.4233 126.291 31.6467 126.698 31.8C127.104 31.9533 127.524 32.03 127.958 32.03C128.404 32.03 128.828 31.9533 129.228 31.8C129.634 31.64 129.994 31.4133 130.308 31.12C130.621 30.82 130.868 30.4567 131.048 30.03C131.228 29.6033 131.318 29.1233 131.318 28.59V19.6H133.758V28.65C133.758 29.79 133.511 30.7833 133.018 31.63C132.531 32.4767 131.851 33.1333 130.978 33.6C130.111 34.0667 129.104 34.3 127.958 34.3ZM136.552 34V19.6H142.502C142.642 19.6 142.822 19.6067 143.042 19.62C143.262 19.6267 143.466 19.6467 143.652 19.68C144.486 19.8067 145.172 20.0833 145.712 20.51C146.259 20.9367 146.662 21.4767 146.922 22.13C147.189 22.7767 147.322 23.4967 147.322 24.29C147.322 25.0767 147.189 25.7967 146.922 26.45C146.656 27.0967 146.249 27.6333 145.702 28.06C145.162 28.4867 144.479 28.7633 143.652 28.89C143.466 28.9167 143.259 28.9367 143.032 28.95C142.812 28.9633 142.636 28.97 142.502 28.97H138.962V34H136.552ZM138.962 26.72H142.402C142.536 26.72 142.686 26.7133 142.852 26.7C143.019 26.6867 143.172 26.66 143.312 26.62C143.712 26.52 144.026 26.3433 144.252 26.09C144.486 25.8367 144.649 25.55 144.742 25.23C144.842 24.91 144.892 24.5967 144.892 24.29C144.892 23.9833 144.842 23.67 144.742 23.35C144.649 23.0233 144.486 22.7333 144.252 22.48C144.026 22.2267 143.712 22.05 143.312 21.95C143.172 21.91 143.019 21.8867 142.852 21.88C142.686 21.8667 142.536 21.86 142.402 21.86H138.962V26.72Z" fill="black"/>
// <rect x="22" y="66" width="110" height="13" fill="#D9D9D9"/>
// <rect x="22" y="94" width="153" height="13" fill="#D9D9D9"/>
// <rect x="22" y="122" width="67" height="13" fill="#D9D9D9"/>
// <defs>
// <filter id="filter0_d_3555_13279" x="0" y="0" width="218" height="305" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
// <feFlood flood-opacity="0" result="BackgroundImageFix"/>
// <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
// <feOffset dy="4"/>
// <feGaussianBlur stdDeviation="2"/>
// <feComposite in2="hardAlpha" operator="out"/>
// <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
// <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_3555_13279"/>
// <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_3555_13279" result="shape"/>
// </filter>
// </defs>
// </svg>
